<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.fewe.NodeNpmEnvironment</groupId>
	<artifactId>NodeNpmEnvironment</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>NodeNpmEnvironment</name>
	<packaging>pom</packaging>
	<description>Dieses Maven-Projekt installiert Node in bestimmten Version(${node.version})
	um dann in der Shell verwenden zu können(startConsoleWithNodeNpmSupport.cmd).</description>

	<properties>
		<!-- Build properties -->
		<maven.version>3.3.9</maven.version>
		<java.version>11</java.version>
		<node.version>v16.18.1</node.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<!-- Plugin versions -->
		<frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
		<!-- Quelle: https://nodejs.org/dist/ , https://registry.npmjs.org/npm/-/npm-x.xx.xx.tgz -->
		<!-- node.npm.downloadRoot>https://nexus.pr.sv.loc/repository/raw-group/nodejs/</node.npm.downloadRoot -->
		<!-- node.npm.downloadRoot>https://nodejs.org/dist/</node.npm.downloadRoot -->
		<node.npm.downloadRoot>https://nodejs.org/dist/</node.npm.downloadRoot>
		<maven.settings.serverId>central-proxy</maven.settings.serverId>
		
		<!--mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:1.3:list -->
	</properties>

	<dependencies>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<nodeDownloadRoot>${node.npm.downloadRoot}</nodeDownloadRoot>
			  		<serverId>${maven.settings.serverId}</serverId>
			  		<installDirectory>target</installDirectory>					  		
				</configuration>
				<executions>
					<execution>
						<id>install-node-and-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
					</execution>
                    <execution>
                        <id>webapp build prod</id> <!-- Beispiel für Bau einer JS-Anwendung: <skip>false</skip> -->
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                        	<skip>true</skip> <!--  -->
                            <arguments>run webapp:build:prod</arguments>
                            <environmentVariables>
                                <APP_VERSION>${project.version}</APP_VERSION>
                            </environmentVariables>
                            <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                    </execution>
				</executions>
			</plugin>
			<plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-enforcer-plugin</artifactId>
	        <version>3.1.0</version>
	        <executions>
	          <execution>
	            <id>enforce-files-exist</id>
	            <goals>
	              <goal>enforce</goal>
	            </goals>
	            <phase>process-resources</phase>
	            <configuration>
	              <rules>
	                <requireFilesExist>
	                  <files>
	                   <file>${project.basedir}/package-lock.json</file>
	                  </files>
	                </requireFilesExist>
	              </rules>
	              <fail>true</fail>
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
		</plugins>
	</build>
	<profiles>
	    <profile>
          <id>jhipster-sample-setup</id> <!-- nur unter windows, für jenkins müssen sh skripte existieren und ausgeführt werden-->
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                   	<plugin>
	                    <groupId>org.apache.maven.plugins</groupId>
	                    <artifactId>maven-resources-plugin</artifactId>
	                    <executions>
	                         <execution>
	                          <id>copy sample.jdl to ${project.build.directory}/jhipster-sample-setup</id>
	                            <phase>package</phase>
	                            <goals>
	                              <goal>copy-resources</goal>
	                            </goals>
	                            <configuration>
	                              <outputDirectory>${project.build.directory}/jhipster-sample-setup</outputDirectory>      
	                              <overwrite>true</overwrite>                       
	                              <resources>
	                                <resource>
	                                  <directory>${project.basedir}/jhipster-sample-setup</directory>
	                                  <includes>
	                                    <include>sample.jdl</include>
	                                    <include>install-generator-jhipster.cmd</include>
	                                    <include>import-jdl-sample.cmd</include>
	                                    <include>setJava.cmd</include>
	                                  </includes>
	                                </resource>
	                              </resources>
	                            </configuration>
	                        </execution>
	                    </executions>
	                </plugin>
	                <plugin>
	                  <groupId>org.codehaus.mojo</groupId>
	                  <artifactId>exec-maven-plugin</artifactId>
	                  <executions>
	                    <execution>
	                      <id>npm install generator-jhipster</id>
	                      <phase>install</phase>
	                      <goals>
	                        <goal>exec</goal>
	                      </goals>
	                      <configuration>
	                        <workingDirectory>${project.build.directory}/jhipster-sample-setup</workingDirectory>
	                        <executable>${project.build.directory}/jhipster-sample-setup/install-generator-jhipster.cmd</executable>
	                      </configuration>
	                    </execution>
	                    <execution>
	                      <id>npm import-jdl sample.jdl</id>
	                      <phase>install</phase>
	                      <goals>
	                        <goal>exec</goal>
	                      </goals>
	                      <configuration>
	                        <workingDirectory>${project.build.directory}/jhipster-sample-setup</workingDirectory>
	                        <executable>${project.build.directory}/jhipster-sample-setup/import-jdl-sample.cmd</executable>
	                      </configuration>
	                    </execution>
	                  </executions>
	                </plugin>
                </plugins>
            </build>
         </profile>
	</profiles>
</project>
