<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.svi.node-npm-environment</groupId>
	<artifactId>node-npm-environment</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>node-npm-environment</name>
	<packaging>pom</packaging>
	<description>Dieses Maven-Projekt installiert Node in bestimmten Version(${node.version})
	um dann in der Shell verwenden zu können(startConsoleWithNodeNpmSupport.cmd). Bitte README lesen!!!</description>

	<properties>
		<!-- Build properties -->
		<maven.version>3.6.0</maven.version>
		<java.version>11</java.version>
		<node.version>v18.19.0</node.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<!-- Plugin versions -->
		<!-- Quelle: https://nodejs.org/dist/ , https://registry.npmjs.org/[MODULNAME]/-/[MODULNAME]-x.xx.xx.tgz -->
		<!-- node.npm.downloadRoot>https://nodejs.org/dist/</node.npm.downloadRoot -->

		<!--mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:1.3:list -->
	</properties>

	<dependencies>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.15.0</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<nodeDownloadRoot>${node.npm.downloadRoot}</nodeDownloadRoot>
					<serverId>${maven.settings.serverId}</serverId>
					<installDirectory>target</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install-node-and-npm</id>
						<goals>
							<goal>install-node-and-npm</goal> <!-- holt node-executable(node-${node.version}-win-x64.zip/node-${node.version}-linux-x64.tar.gz) aus Nexus oder https://nodejs.org/dist und packt hierhin(MavenRepo\com\github\eirslett\node\${node.version}) und entpackt nach target/node -->
						</goals>
					</execution>
					<execution>
						<id>npm install</id> <!-- node_modules werden erstellt und aus package.json vervollständigt -->
						<goals>
							<goal>npm</goal>
						</goals>
					</execution>
					<execution>
						<id>webapp build prod</id> <!-- Beispiel für Bau einer JS-Anwendung: <skip>false</skip> -->
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<skip>true</skip> <!-- um zu aktivieren auf true setzen -->
							<arguments>run webapp:build:prod</arguments>
							<environmentVariables>
								<APP_VERSION>${project.version}</APP_VERSION>
							</environmentVariables>
							<npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>enforce-package-lock.json-exists</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<rules>
								<requireFilesExist>
									<files>
										<file>${project.basedir}/package-lock.json</file>
									</files>
								</requireFilesExist>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<!-- Aufsetzen von Setups mit JHipster: 1. Anpassen/Entwickeln der jhipster-setup/sample.jdl(https://start.jhipster.tech/jdl-studio/) 
		Nach dem Build ist der SourceCode unter target/sample zu finden -->
	<profiles>
		<profile>
			<id>jhipster-setup</id>
			<properties>
				<!--[name-model.jdl] unter jhipster-setup ablegen Property: jhipster.model=[name-model] setzen!!! Zeile drunter oder -Dname-model=name-model -->
		        <jhipster.model>microservice-risikoLv</jhipster.model>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy ${jhipster.model}.jdl to ${project.build.directory}/${jhipster.model}</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${jhipster.model}</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
										    <filtering>true</filtering>
											<directory>${project.basedir}/jhipster-setup</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>npm install generator-jhipster</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}/${jhipster.model}</workingDirectory>
									<executable>install-generator-jhipster.cmd</executable>
								</configuration>
							</execution>
							<execution>
								<id>npm import-jdl ${jhipster.model}.jdl</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}/${jhipster.model}</workingDirectory>
									<executable>import-jdl.cmd</executable>
									<arguments>
									  <argument>${jhipster.model}.jdl</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jhipster-setup-quarkus</id> <!-- Experimentel: alternativ zu SpringBoot mit Quarkus erfordert node 16 siehe node.version and jhipster793 -->
			<properties>
				<!--[name-model.jdl] unter jhipster-setup ablegen Property: jhipster.model=[name-model] setzen!!! Zeile drunter oder -Dname-model=name-model -->
		        <jhipster.model>microservice-risikoLv</jhipster.model>
		        <node.version>v16.20.2</node.version> <!--please set for -Pjhipster-sample-setup-quarkus to v16.20.1 -->
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy ${jhipster.model} to ${project.build.directory}/${jhipster.model}</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${jhipster.model}</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
										    <filtering>true</filtering>
											<directory>${project.basedir}/jhipster-setup</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>npm install generator-jhipster</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}/${jhipster.model}</workingDirectory>
									<executable>install-generator-jhipster794.cmd</executable>
								</configuration>
							</execution>
							<execution>
								<id>npm install generator-jhipster-quarkus</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}/${jhipster.model}</workingDirectory>
									<executable>install-generator-jhipster-quarkus.cmd</executable>
								</configuration>
							</execution>
							<execution>
								<id>npm import-jdl ${jhipster.model}.jdl</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}/${jhipster.model}</workingDirectory>
									<executable>import-jdl-quarkus.cmd</executable>
									<arguments>
									  <argument>${jhipster.model}.jdl</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jhipster8-setup</id>
			<properties>
				<!--[name-model.jdl] unter jhipster-setup ablegen Property: jhipster.model=[name-model] setzen!!! Zeile drunter oder -Dname-model=name-model -->
		        <jhipster.model>microservice-risikoLv</jhipster.model>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy ${jhipster.model}.jdl to ${project.build.directory}/${jhipster.model}</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${jhipster.model}</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
										    <filtering>true</filtering>
											<directory>${project.basedir}/jhipster-setup</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>npm install generator-jhipster</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}/${jhipster.model}</workingDirectory>
									<executable>install-generator-jhipster8.cmd</executable>
								</configuration>
							</execution>
							<execution>
								<id>npm import-jdl ${jhipster.model}</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}/${jhipster.model}</workingDirectory>
									<executable>import-jdl.cmd</executable>
									<arguments>
									  <argument>${jhipster.model}.jdl</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
